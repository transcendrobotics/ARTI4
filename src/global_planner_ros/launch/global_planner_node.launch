<?xml version="1.0"?>

<launch>

  <arg name="static_map" default="false"/>
  <arg name="robot_name" default=""/>
  <!-- <arg name="base_global_planner" default="navfn/NavfnROS"/> -->
  <arg name="base_global_planner" default="global_planner/GlobalPlanner"/>

  <!-- <arg name="map_file" default="$(find global_planner_ros)/map/willowgarage_perfect.yaml"/> -->
  <arg name="map_file" default="$(find husky_navigation)/maps/playpen_map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" if="$(arg static_map)"/>
  <include file="$(find husky_navigation)/launch/amcl.launch" if="$(arg static_map)"/>
	<include file="$(find husky_navigation)/launch/gmapping.launch" unless="$(arg static_map)"/>

  <node pkg="global_planner_ros" type="global_planner_node" respawn="true" name="global_planner" output="screen">
    <!-- <remap from="/global_planner/global_plan" to=""/> -->
    <param name="robot_namespace" value="$(arg robot_name)"/>
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <rosparam>
      collision_check_frequency: 10
      smooth_tolerance: 0.01
      smooth_delta: 0.5
      smooth_weight: 0.5

      NavfnROS: 
        allow_unknown: true
        default_tolerance: 0.1
      
      GlobalPlanner:
        allow_unknown: true
        default_tolerance: 0.1
        use_grid_path: false
        use_quadratic: true
        old_navfn_behavior: true
        visualize_potential: false
        use_dijkstra: false

    </rosparam>
    <!-- global costmap -->
    <rosparam ns="global_costmap">
      footprint: [[-0.5, -0.34], [-0.5, 0.34], [0.5, 0.34], [0.5, -0.34]]
      #footprint: [[-0.5, -0.4], [-0.5, 0.4], [0.5, 0.4], [0.5, -0.4]]
      footprint_padding: 0.01

      # global_frame: odom
      # robot_base_frame: base_link

      update_frequency: 1.0
      publish_frequency: 3.0
      transform_tolerance: 0.5

      resolution: 0.1

      obstacle_range: 24.5 # 5.5
      raytrace_range: 25.0 # 6.0

      #layer definitions
      static:
          map_topic: map
          subscribe_to_updates: true

      obstacles_laser:
          observation_sources: laser
          laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true}

      inflation:
          inflation_radius: 0.65
          cost_scaling_factor: 7
    </rosparam>
    <param name="global_costmap/global_frame"  value="$(arg robot_name)/odom" unless="$(arg static_map)"/>
    <param name="global_costmap/global_frame"  value="$(arg robot_name)/map" if="$(arg static_map)"/>
    
    <!-- <param name="tf_prefix" value="$(arg robot_name)"/> -->
    <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_link"/>
    <param name="global_costmap/static/map_topic" value="$(arg robot_name)/map"/>

    <rosparam ns="global_costmap" if="$(arg static_map)">
      rolling_window: false
      track_unknown_space: true

      plugins:
        - {name: static,                  type: "costmap_2d::StaticLayer"}
        - {name: inflation,               type: "costmap_2d::InflationLayer"}
    </rosparam>

    <rosparam ns="global_costmap" unless="$(arg static_map)"> 
      rolling_window: true
      track_unknown_space: true
      width: 200.0
      height: 200.0
      plugins:
        - {name: obstacles_laser,           type: "costmap_2d::ObstacleLayer"}
        - {name: inflation,                 type: "costmap_2d::InflationLayer"}
    </rosparam>


  </node>

</launch>
