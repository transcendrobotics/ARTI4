#!/usr/bin/env python
# DAD Planner configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t, str_t
from local_planner_limits import add_generic_localplanner_params

gen = ParameterGenerator()


# This unusual line allows to reuse existing parameter definitions
# that concern all localplanners
# add_generic_localplanner_params(gen)


# gen.add("my_param", double_t, 0 , "My param", 0, 0, 1)
# gen.add("restore_defaults", bool_t, 0 , "Restore defaults", False)
gen.add("spatial_convergence_threshold", double_t, 0 , "spatial_convergence_threshold", 0.5, 0, 2.0)
gen.add("angular_convergence_threshold", double_t, 0 , "angular_convergence_threshold", 3.14, 0, 3.142)

gen.add("robot_radius", double_t, 0 , "robot_radius", 1.0, 0, 5.0)
gen.add("traj_resolution", int_t, 0 , "traj_resolution", 20, 0, 200 )
gen.add("detour_cost_factor", double_t, 0 , "detour_cost_factor", 2.0, 0, 5)
gen.add("tube_size", double_t, 0 , "tube_size", 0.2, 0, 2)
# gen.add("mp_path", str_t, 0 , "mp_path", "")
gen.add("max_iteration_count", int_t, 0 , "max_iteration_count", 5000, 1, 50000)
gen.add("global_frame_id", str_t, 0 , "global_frame_id", "odom")
gen.add("mp_duration", double_t, 0 , "mp_duration", 1, 0.1, 10)
gen.add("debug", bool_t, 0 , "debug", False)
gen.add("debug_wait_input", bool_t, 0 , "debug_wait_input", False)
gen.add("spatial_hash_size", int_t, 0 , "spatial_hash_size", 101, 1, 1001)
gen.add("spatial_hash_time_tolerance", double_t, 0 , "spatial_hash_size", 0.05, 0, 0.5)
gen.add("acc_max_fwd", double_t, 0 , "acc_max_fwd", 5, 0, 10)
gen.add("acc_max_back", double_t, 0 , "acc_max_back", -5, -10, 0)
# gen.add("vel_max", double_t, 0 , "vel_max", 1, 0, 10)
gen.add("vel_max_fwd", double_t, 0 , "vel_max_fwd", 1, 0, 10)
gen.add("vel_max_back", double_t, 0 , "vel_max_back", -1, -10, 0)
gen.add("curvature_max", double_t, 0 , "curvature_max", 5, 0, 20)

gen.add("skip_cost_factor", double_t, 0 , "skip_cost_factor", 0.1, 0, 2)
gen.add("static_obs_collision_risk_factor", double_t, 0 , "static_obs_collision_risk_factor", 0.05, 0, 0.5)
gen.add("dynamic_obs_collision_risk_factor", double_t, 0 , "dynamic_obs_collision_risk_factor", 0.05, 0, 20)

gen.add("sub_optimality_eps", double_t, 0 , "sub_optimality_eps", 0.0, 0, 2)


exit(gen.generate("dad_local_planner", "dad_local_planner", "DADPlannerROS"))
